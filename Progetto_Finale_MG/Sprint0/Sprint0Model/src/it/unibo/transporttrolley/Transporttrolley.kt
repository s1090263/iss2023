/* Generated by AN DISI Unibo */ 
package it.unibo.transporttrolley

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023
	
class Transporttrolley ( name: String, scope: CoroutineScope, bho: Boolean  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		val interruptedStateTransitions = mutableListOf<Transition>()
				return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - START, engage basicrobot")
						request("engage", "engage(transporttrolley,330)" ,"basicrobot" )  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="s04",targetState="waitRequest",cond=whenReply("engagedone"))
				}	 
				state("waitRequest") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - waiting for a request...")
						 CommUtils.waitTheUser("$name Please HIT to send takeCharge command to trolley ")  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="moveToIndoor", cond=doswitch() )
				}	 
				state("moveToIndoor") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - taking charge of request")
						CommUtils.outgreen("$name - moving to Indoor")
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="loadTheCharge", cond=doswitch() )
				}	 
				state("loadTheCharge") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - loading charge ...")
						 CommUtils.waitTheUser("$name loading charge. Please HIT ")  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="moveToColdRoom", cond=doswitch() )
				}	 
				state("moveToColdRoom") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - moving to ColdRoom ...")
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="storeTheCharge", cond=doswitch() )
				}	 
				state("storeTheCharge") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - storing charge ...")
						 CommUtils.waitTheUser("$name storing charge. Please HIT") 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
				 	 		stateTimer = TimerActor("timer_storeTheCharge", 
				 	 					  scope, context!!, "local_tout_transporttrolley_storeTheCharge", 1000.toLong() )
					}	 	 
					 transition(edgeName="t05",targetState="moveToHome",cond=whenTimeout("local_tout_transporttrolley_storeTheCharge"))   
				}	 
				state("moveToHome") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - No more requests, moving to home ...")
						delay(2000) 
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition( edgeName="goto",targetState="trolleyAtHome", cond=doswitch() )
				}	 
				state("trolleyAtHome") { //this:State
					action { //it:State
						CommUtils.outgreen("$name - trolleyAtHome ... ")
						forward("disengage", "disengage(transporttrolley)" ,"basicrobot" ) 
						CommUtils.outgreen("$name - disengaged")
						delay(1000) 
						 System.exit(0)  
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
				}	 
			}
		}
}
